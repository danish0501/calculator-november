{"version":3,"sources":["Calculator.js","App.js","index.js"],"names":["Calculator","_useState","useState","_useState2","_slicedToArray","num1","setNum1","_useState3","_useState4","num2","setNum2","_useState5","_useState6","_useState7","_useState8","result","setResult","_useState9","_useState10","errorMessage","setErrorMessage","handleInputChange","event","inputType","value","target","performOperation","signValue","isNaN","parseFloat","number1","number2","resultValue","concat","React","createElement","className","type","placeholder","onChange","e","onClick","style","color","App","ReactDOM","render","document","getElementById"],"mappings":"gKA6FeA,EA3FI,WAAM,IAAAC,EACCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAAAI,EACIL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAAAG,EACcT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAhBE,GAAdD,EAAA,GAAcA,EAAA,GACFV,mBAAS,KAAGY,EAAAV,YAAAS,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACgBf,mBAAS,IAAGgB,EAAAd,YAAAa,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,EAAoB,SAACC,EAAOC,GAChC,IAAMC,EAAQF,EAAMG,OAAOD,MACT,SAAdD,EACFjB,EAAQkB,GAEa,SAAdD,GACPb,EAAQc,IAyBNE,EAAmB,SAACC,GACxB,GArBAP,EAAgB,IAEXf,EAKII,GAKLmB,MAAMC,WAAWxB,MAAUuB,MAAMC,WAAWpB,MAC9CW,EAAgB,+BACT,IANPA,EAAgB,yBACT,IANPA,EAAgB,yBACT,GAiBa,CACpB,IAAMU,EAAUD,WAAWxB,GACrB0B,EAAUF,WAAWpB,GAEvBuB,EAAc,EAElB,OAAQL,GACN,IAAK,IACHK,EAAcF,EAAUC,EACxB,MACF,IAAK,IACHC,EAAcF,EAAUC,EACxB,MACF,IAAK,IACHC,EAAcF,EAAUC,EACxB,MACF,IAAK,IACHC,EAAcF,EAAUC,EAM5Bf,EAAS,WAAAiB,OAAYD,MAIzB,OACEE,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,UAAI,oBACND,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAAA,SAAOE,KAAK,OAAOC,YAAY,QAAQd,MAAOnB,EAAMkC,SAAU,SAACC,GAAC,OAAKnB,EAAkBmB,EAAG,WAAW,+CAErGN,IAAAC,cAAA,SAAOE,KAAK,OAAOC,YAAY,QAAQd,MAAOf,EAAM8B,SAAU,SAACC,GAAC,OAAKnB,EAAkBmB,EAAG,WAAW,gDAGvGN,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,UAAQM,QAAS,WAAQf,EAAiB,OAAS,KAAU,mBAE7DQ,IAAAC,cAAA,UAAQM,QAAS,WAAQf,EAAiB,OAAS,KAAU,mBAE7DQ,IAAAC,cAAA,UAAQM,QAAS,WAAQf,EAAiB,OAAS,KAAU,mBAE7DQ,IAAAC,cAAA,UAAQM,QAAS,WAAQf,EAAiB,OAAS,MAEpDP,GAAgBe,IAAAC,cAAA,OAAKC,UAAU,SAAQF,IAAAC,cAAA,OAAKO,MAAO,CAAEC,MAAO,QAAS,UAAY,IAAExB,GACnFJ,GAAUmB,IAAAC,cAAA,OAAKC,UAAU,WAAUF,IAAAC,cAAA,OAAKC,UAAU,eAAeM,MAAO,CAAEC,MAAO,UAAW,YAAc,IAAE5B,KC5EpG6B,EATH,WAEV,OACIV,IAAAC,cAAA,WACID,IAAAC,cAACnC,EAAU,cCDrB6C,IAASC,OAAOZ,IAAAC,cAACS,EAAG,MAAKG,SAASC,eAAe","file":"static/js/main.0de9e066.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Calculator = () => {\r\n  const [num1, setNum1] = useState('');\r\n  const [num2, setNum2] = useState('');\r\n  const [operation, setOperation] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n  const handleInputChange = (event, inputType) => {\r\n    const value = event.target.value;\r\n    if (inputType === 'num1') {\r\n      setNum1(value);\r\n    } \r\n    else if (inputType === 'num2') {\r\n      setNum2(value);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    setErrorMessage('');\r\n\r\n    if (!num1) {\r\n      setErrorMessage('Num1 cannot be empty.');\r\n      return false;\r\n    }\r\n\r\n    else if(!num2) {\r\n      setErrorMessage('Num2 cannot be empty.');\r\n      return false;\r\n    }\r\n\r\n    if (isNaN(parseFloat(num1)) || isNaN(parseFloat(num2))) {\r\n      setErrorMessage('Please enter valid numbers.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const performOperation = (signValue) => {\r\n    if (validateInputs()) {\r\n      const number1 = parseFloat(num1);\r\n      const number2 = parseFloat(num2);\r\n\r\n      let resultValue = 0;\r\n\r\n      switch (signValue) {\r\n        case '+':\r\n          resultValue = number1 + number2;\r\n          break;\r\n        case '-':\r\n          resultValue = number1 - number2;\r\n          break;\r\n        case '*':\r\n          resultValue = number1 * number2;\r\n          break;\r\n        case '/':\r\n          resultValue = number1 / number2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setResult(`Result: ${resultValue}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='main-div'>\r\n        <h3>React Calculator</h3>\r\n      <div className='input'>\r\n        <input type=\"text\" placeholder=\"Num 1\" value={num1} onChange={(e) => handleInputChange(e, 'num1')} />\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <input type=\"text\" placeholder=\"Num 2\" value={num2} onChange={(e) => handleInputChange(e, 'num2')} />\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </div>\r\n      <div className='button'>\r\n        <button onClick={() => { performOperation('+'); }}>+</button>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button onClick={() => { performOperation('-'); }}>-</button>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button onClick={() => { performOperation('*'); }}>*</button>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button onClick={() => { performOperation('/'); }}>/</button>\r\n      </div>\r\n      {errorMessage && <div className='error'><div style={{ color: 'red' }}>Error!</div> {errorMessage}</div>}\r\n      {result && <div className='success'><div className='success-flex' style={{ color: 'green' }}>Success!</div> {result}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport Calculator from \"./Calculator\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <div>\r\n          <Calculator />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./style.css\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}